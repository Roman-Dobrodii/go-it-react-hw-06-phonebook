{"version":3,"sources":["Components/filter/Filter.module.css","Components/contactsList/ContactsList.module.css","Components/App.module.css","Components/Alert/Alert.module.css","Components/contactForm/ContactForm.module.css","Components/contactsListItem/ContactsListItems.module.css","redux/contacts/contactsActionTypes.js","redux/contacts/contactsActions.js","Components/contactForm/ContactForm.js","Components/contactsListItem/ContactsListItems.js","Components/contactsList/ContactsList.js","Components/filter/Filter.js","Components/Alert/Alert.js","Components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","name","number","type","actionTypes","payload","id","uuidv4","filter","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","items","find","contact","toLowerCase","onChangeAlert","setTimeout","onAddContact","this","onSubmit","className","styles","contactForm","onChange","Component","connect","contacts","alert","dispatch","actions","onDeleteContact","ContactsListItem","onClick","ContactsList","TransitionGroup","component","contactsList","map","CSSTransition","in","length","timeout","classNames","includes","getFilter","filterWrapper","unmountOnExit","onChangeFilter","appear","sectionTitle","combineReducers","action","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b489739.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__3UsUh\",\"filter\":\"Filter_filter__2_vAX\",\"enter\":\"Filter_enter__2sCOO\",\"enterActive\":\"Filter_enterActive__3OL2O\",\"exit\":\"Filter_exit__WoGZI\",\"exitActive\":\"Filter_exitActive__80P-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__3Ede_\",\"contactsListItem\":\"ContactsList_contactsListItem__1haWH\",\"enter\":\"ContactsList_enter__36wN0\",\"enterActive\":\"ContactsList_enterActive__3q2Iz\",\"exit\":\"ContactsList_exit__2SE5u\",\"exitActive\":\"ContactsList_exitActive__2bRxC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"App_sectionTitle__3szAW\",\"appear\":\"App_appear__PPw11\",\"appearActive\":\"App_appearActive__3Al1P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__2behH\",\"enter\":\"Alert_enter__Yq7M3\",\"enterActive\":\"Alert_enterActive__31qpU\",\"exit\":\"Alert_exit__JxAjg\",\"exitActive\":\"Alert_exitActive__1xEFe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2XY88\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsListItem\":\"ContactsListItems_contactsListItem__3AiFd\"};","const ADD = 'contacts/add';\r\nconst DELETE = 'contacts/delete';\r\nconst CHANGE_FILTER = 'contacts/filter';\r\nconst ALERT = 'contacts/alert';\r\n\r\nexport default {\r\n  ADD,\r\n  DELETE,\r\n  CHANGE_FILTER,\r\n  ALERT,\r\n};\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport actionTypes from './contactsActionTypes';\r\n\r\nconst addContact = ({ name, number }) => ({\r\n  type: actionTypes.ADD,\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nconst deleteContact = id => ({\r\n  type: actionTypes.DELETE,\r\n  payload: { id },\r\n});\r\n\r\nconst changeFilter = filter => ({\r\n  type: actionTypes.CHANGE_FILTER,\r\n  payload: { filter },\r\n});\r\n\r\nconst showAlert = () => ({\r\n  type: actionTypes.ALERT,\r\n});\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  changeFilter,\r\n  showAlert,\r\n};\r\n","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/contacts/contactsActions';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name } = this.state;\r\n\r\n    if (\r\n      this.props.items.find(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n      )\r\n    ) {\r\n      this.props.onChangeAlert();\r\n      setTimeout(() => this.props.onChangeAlert(), 1500);\r\n      return;\r\n    }\r\n\r\n    this.props.onAddContact(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.contactForm}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.contacts.items,\r\n    alert: state.contacts.alert,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAddContact: contact => dispatch(actions.addContact(contact)),\r\n  onChangeAlert: () => dispatch(actions.showAlert()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport styles from \"./ContactsListItems.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/contacts/contactsActions\";\r\n\r\nfunction ContactsListItems({ contact, onDeleteContact }) {\r\n  const deleteItem = () => {\r\n    onDeleteContact(contact.id);\r\n  };\r\n\r\n  return (\r\n    <li className={styles.ContactsListItem}>\r\n      {contact.name}: {contact.number}\r\n      <button type=\"button\" onClick={deleteItem}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(actions.deleteContact(id))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ContactsListItems);\r\n","import React, { Component } from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./ContactsList.module.css\";\r\nimport ContactsListItems from \"../contactsListItem/ContactsListItems\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ContactsList extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <TransitionGroup component=\"ul\" className={styles.contactsList}>\r\n          {this.props.contacts.map(contact => (\r\n            <CSSTransition key={contact.id} in={this.props.contacts.length > 0} timeout={250} classNames={styles}>\r\n              <ContactsListItems contact={contact} />\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.filter\r\n      ? state.contacts.items.filter(contact => contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase()))\r\n      : state.contacts.items\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactsList);\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/contacts/contactsActions\";\r\n\r\nconst Filter = ({ filter, getFilter }) => {\r\n  return (\r\n    <div className={styles.filterWrapper}>\r\n      <CSSTransition in={true} timeout={1000} classNames={styles}>\r\n        <label className={styles.filter}>\r\n          Find contacts by name\r\n          <input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={e => {\r\n              getFilter(e.target.value);\r\n            }}\r\n          />\r\n        </label>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: state.contacts.filter\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getFilter: filter => dispatch(actions.changeFilter(filter))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Filter);\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./Alert.module.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Alert({ alert }) {\r\n  return (\r\n    <CSSTransition in={alert} classNames={styles} timeout={250} unmountOnExit>\r\n      <p className={styles.alert}>The name is already exist</p>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    alert: state.contacts.alert\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React from \"react\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactsList from \"./contactsList/ContactsList\";\r\nimport Filter from \"./filter/Filter\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./App.module.css\";\r\nimport Alert from \"./Alert/Alert\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../redux/contacts/contactsActions\";\r\n\r\nfunction App({ items, alert }) {\r\n  return (\r\n    <>\r\n      <Alert alert={alert} />\r\n      <CSSTransition in={true} timeout={500} classNames={styles} appear={true} unmountOnExit>\r\n        <p className={styles.sectionTitle}> Phonebook </p>\r\n      </CSSTransition>\r\n      <ContactForm />\r\n      {items.length > 1 && <Filter />}\r\n      <ContactsList />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.contacts.items\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangeFilter: filter => dispatch(actions.changeFilter(filter))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import { combineReducers } from 'redux';\r\nimport actionTypes from './contactsActionTypes';\r\n\r\nconst items = (state = [], action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD:\r\n      return [...state, action.payload];\r\n\r\n    case actionTypes.DELETE:\r\n      return state.filter(contact => contact.id !== action.payload.id);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CHANGE_FILTER:\r\n      return action.payload.filter;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst alert = (state = false, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ALERT:\r\n      return !state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  alert,\r\n});\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './contacts/contactsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n  composeWithDevTools(),\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./Components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}