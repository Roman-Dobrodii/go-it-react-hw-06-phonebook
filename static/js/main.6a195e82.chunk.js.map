{"version":3,"sources":["Components/filter/Filter.module.css","Components/contactsList/ContactsList.module.css","Components/App.module.css","Components/Alert/Alert.module.css","Components/contactForm/ContactForm.module.css","Components/contactsListItem/ContactsListItems.module.css","redux/contacts/contactsActions.js","Components/contactForm/ContactForm.js","Components/contactsListItem/ContactsListItems.js","Components/contactsList/ContactsList.js","Components/filter/Filter.js","Components/Alert/Alert.js","Components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","filter","showAlert","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","items","find","contact","toLowerCase","onChangeAlert","setTimeout","onAddContact","this","onSubmit","className","styles","contactForm","type","onChange","Component","connect","contacts","alert","dispatch","actions","onDeleteContact","ContactsListItem","onClick","ContactsList","TransitionGroup","component","contactsList","map","CSSTransition","in","length","timeout","classNames","includes","onContactDelete","getFilter","filterWrapper","unmountOnExit","onChangeFilter","appear","sectionTitle","createReducer","action","_","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,OAAS,uBAAuB,MAAQ,sBAAsB,YAAc,4BAA4B,KAAO,qBAAqB,WAAa,6B,mBCAjND,EAAOC,QAAU,CAAC,aAAe,mCAAmC,iBAAmB,uCAAuC,MAAQ,4BAA4B,YAAc,kCAAkC,KAAO,2BAA2B,WAAa,mC,mBCAjQD,EAAOC,QAAU,CAAC,aAAe,0BAA0B,OAAS,oBAAoB,aAAe,4B,mBCAvGD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,YAAc,2BAA2B,KAAO,oBAAoB,WAAa,4B,mBCA7JD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,iBAAmB,8C,6KC2BtB,GACbC,WAzBiBC,YAAa,gBAAgB,YAAuB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACvD,MAAO,CACLC,QAAS,CACPC,GAAIC,cACJJ,OACAC,cAqBJI,cAhBoBN,YAAa,mBAAmB,SAAAI,GACpD,MAAO,CACLD,QAAS,CAAEC,UAebG,aAXmBP,YAAa,mBAAmB,SAAAQ,GACnD,MAAO,CACLL,QAAS,CAAEK,cAUbC,UANgBT,YAAa,mB,OCrBzBU,E,4MACJC,MAAQ,CACNV,KAAM,GACNC,OAAQ,I,EAGVU,aAAe,SAAAC,GAAM,IAAD,EACMA,EAAEC,OAAlBb,EADU,EACVA,KAAMc,EADI,EACJA,MAEd,EAAKC,SAAL,eACGf,EAAOc,K,EAIZE,aAAe,SAAAJ,GACbA,EAAEK,iBADgB,IAEVjB,EAAS,EAAKU,MAAdV,KAER,GACE,EAAKkB,MAAMC,MAAMC,MACf,SAAAC,GAAO,OAAIA,EAAQrB,KAAKsB,gBAAkBtB,EAAKsB,iBAKjD,OAFA,EAAKJ,MAAMK,qBACXC,YAAW,kBAAM,EAAKN,MAAMK,kBAAiB,MAI/C,EAAKL,MAAMO,aAAa,EAAKf,OAC7B,EAAKK,SAAS,CAAEf,KAAM,GAAIC,OAAQ,M,4CAGpC,WAAU,IAAD,EACkByB,KAAKhB,MAAtBV,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,uBAAM0B,SAAUD,KAAKV,aAAcY,UAAWC,IAAOC,YAArD,UACE,yCAEE,uBACEC,KAAK,OACL/B,KAAK,OACLc,MAAOd,EACPgC,SAAUN,KAAKf,kBAGnB,2CAEE,uBACEoB,KAAK,OACL/B,KAAK,SACLc,MAAOb,EACP+B,SAAUN,KAAKf,kBAGnB,wBAAQoB,KAAK,SAAb,gC,GAtDkBE,aAwEXC,eAZS,SAAAxB,GACtB,MAAO,CACLS,MAAOT,EAAMyB,SAAShB,MACtBiB,MAAO1B,EAAMyB,SAASC,UAIC,SAAAC,GAAQ,MAAK,CACtCZ,aAAc,SAAAJ,GAAO,OAAIgB,EAASC,EAAQxC,WAAWuB,KACrDE,cAAe,kBAAMc,EAASC,EAAQ9B,iBAGzB0B,CAA6CzB,G,kDCzD5D,IAIeyB,cACb,MALyB,SAAAG,GAAQ,MAAK,CACtCE,gBAAiB,SAAApC,GAAE,OAAIkC,EAASC,EAAQjC,cAAcF,QAGzC+B,EAnBf,YAA0D,IAA7Bb,EAA4B,EAA5BA,QAASkB,EAAmB,EAAnBA,gBAKpC,OACE,qBAAIX,UAAWC,IAAOW,iBAAtB,UACGnB,EAAQrB,KADX,KACmBqB,EAAQpB,OACzB,wBAAQ8B,KAAK,SAASU,QAPP,WACjBF,EAAgBlB,EAAQlB,KAMtB,0BCNAuC,E,4JACJ,WAAU,IAAD,OACP,OACE,mCACE,cAACC,EAAA,EAAD,CAAiBC,UAAU,KAAKhB,UAAWC,IAAOgB,aAAlD,SACGnB,KAAKR,MAAMiB,SAASW,KAAI,SAAAzB,GAAO,OAC9B,cAAC0B,EAAA,EAAD,CAEEC,GAAI,EAAK9B,MAAMiB,SAASc,OAAS,EACjCC,QAAS,IACTC,WAAYtB,IAJd,SAME,cAAC,EAAD,CAAmBR,QAASA,KALvBA,EAAQlB,e,GAPA8B,aAqCZC,eAVS,SAAAxB,GACtB,MAAO,CACLyB,UARqBA,EAQKzB,EAAMyB,SAAShB,MARVZ,EAQiBG,EAAMyB,SAAS5B,OAP1D4B,EAAS5B,QAAO,SAAAc,GAAO,OAC5BA,EAAQrB,KAAKsB,cAAc8B,SAAS7C,EAAOe,oBAFvB,IAACa,EAAU5B,KAYR,SAAA8B,GAAQ,MAAK,CACtCgB,gBAAiB,SAAAlD,GAAE,OAAIkC,EAASC,EAAQjC,cAAcF,QAGzC+B,CAA6CQ,G,iBCR7CR,eAVS,SAAAxB,GACtB,MAAO,CACLH,OAAQG,EAAMyB,SAAS5B,WAIA,SAAA8B,GAAQ,MAAK,CACtCiB,UAAW,SAAA/C,GAAM,OAAI8B,EAASC,EAAQhC,aAAaC,QAGtC2B,EA9BA,SAAC,GAA2B,IAAzB3B,EAAwB,EAAxBA,OAAQ+C,EAAgB,EAAhBA,UACxB,OACE,qBAAK1B,UAAWC,IAAO0B,cAAvB,SACE,cAACR,EAAA,EAAD,CAAeC,IAAI,EAAME,QAAS,IAAMC,WAAYtB,IAApD,SACE,wBAAOD,UAAWC,IAAOtB,OAAzB,kCAEE,uBACEwB,KAAK,OACL/B,KAAK,SACLc,MAAOP,EACPyB,SAAU,SAAApB,GACR0C,EAAU1C,EAAEC,OAAOC,oB,kCCJjC,IAMeoB,eANS,SAAAxB,GACtB,MAAO,CACL0B,MAAO1B,EAAMyB,SAASC,SAIXF,EAdf,YAA2B,IAAVE,EAAS,EAATA,MACf,OACE,cAACW,EAAA,EAAD,CAAeC,GAAIZ,EAAOe,WAAYtB,IAAQqB,QAAS,IAAKM,eAAa,EAAzE,SACE,mBAAG5B,UAAWC,IAAOO,MAArB,4CCgBN,I,EAUeF,eAVS,SAAAxB,GACtB,MAAO,CACLS,MAAOT,EAAMyB,SAAShB,UAIC,SAAAkB,GAAQ,MAAK,CACtCoB,eAAgB,SAAAlD,GAAM,OAAI8B,EAASC,EAAQhC,aAAaC,QAG3C2B,EAxBf,YAAgC,IAAjBf,EAAgB,EAAhBA,MAAOiB,EAAS,EAATA,MACpB,OACE,qCACE,cAAC,EAAD,CAAOA,MAAOA,IACd,cAACW,EAAA,EAAD,CAAeC,IAAI,EAAME,QAAS,IAAKC,WAAYtB,IAAQ6B,QAAQ,EAAMF,eAAa,EAAtF,SACE,mBAAG5B,UAAWC,IAAO8B,aAArB,2BAEF,cAAC,EAAD,IACCxC,EAAM8B,OAAS,GAAK,cAAC,EAAD,IACrB,cAAC,EAAD,U,wCCdA9B,EAAQyC,YAAc,IAAD,mBACxBtB,EAAQxC,YAAa,SAACY,EAAOmD,GAAR,4BAAuBnD,GAAvB,CAA8BmD,EAAO3D,aADlC,cAExBoC,EAAQjC,eAAgB,SAACK,EAAOmD,GAAR,OACvBnD,EAAMH,QAAO,SAAAc,GAAO,OAAIA,EAAQlB,KAAO0D,EAAO3D,QAAQC,SAH/B,IAMrBI,EAASqD,YAAc,GAAD,eACzBtB,EAAQhC,cAAe,SAACwD,EAAGD,GAAJ,OAAeA,EAAO3D,QAAQK,WAGlD6B,EAAQwB,aAAc,EAAD,eACxBtB,EAAQ9B,WAAY,SAACE,EAAOoD,GAAR,OAAepD,MAGvBqD,cAAgB,CAC7B5C,QACAZ,SACA6B,U,wBCLI4B,EAAgB,CACpBC,IAAK,QACLC,YACAC,UAAW,CAAC,SAAU,UAGlBC,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAQC,YAAe,CAC3BC,QAAS,CACP9C,SAAU+C,YAAelB,EAAemB,IAE1Cf,aACAgB,UAAUC,IAKG,IAAEN,QAAOO,UAFNC,YAAaR,IChC/BS,IAASC,OACP,cAAC,IAAD,CAAUV,MAAOA,GAAMA,MAAvB,SACE,cAAC,IAAD,CAAaW,QAAS,KAAMJ,UAAWP,GAAMO,UAA7C,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.6a195e82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__3UsUh\",\"filter\":\"Filter_filter__2_vAX\",\"enter\":\"Filter_enter__2sCOO\",\"enterActive\":\"Filter_enterActive__3OL2O\",\"exit\":\"Filter_exit__WoGZI\",\"exitActive\":\"Filter_exitActive__80P-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__3Ede_\",\"contactsListItem\":\"ContactsList_contactsListItem__1haWH\",\"enter\":\"ContactsList_enter__36wN0\",\"enterActive\":\"ContactsList_enterActive__3q2Iz\",\"exit\":\"ContactsList_exit__2SE5u\",\"exitActive\":\"ContactsList_exitActive__2bRxC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"App_sectionTitle__3szAW\",\"appear\":\"App_appear__PPw11\",\"appearActive\":\"App_appearActive__3Al1P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__2behH\",\"enter\":\"Alert_enter__Yq7M3\",\"enterActive\":\"Alert_enterActive__31qpU\",\"exit\":\"Alert_exit__JxAjg\",\"exitActive\":\"Alert_exitActive__1xEFe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2XY88\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsListItem\":\"ContactsListItems_contactsListItem__3AiFd\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n// import actionTypes from './contactsActionTypes';\r\n\r\nconst addContact = createAction('contacts/add', ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction('contacts/delete', id => {\r\n  return {\r\n    payload: { id },\r\n  };\r\n});\r\n\r\nconst changeFilter = createAction('contacts/filter', filter => {\r\n  return {\r\n    payload: { filter },\r\n  };\r\n});\r\n\r\nconst showAlert = createAction('contacts/alert');\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  changeFilter,\r\n  showAlert,\r\n};\r\n\r\n// function addContact({ name, number }) {\r\n//   return ({\r\n//     type: actionTypes.ADD,\r\n//     payload: {\r\n//       id: uuidv4(),\r\n//       name,\r\n//       number,\r\n//     },\r\n//   });\r\n// }\r\n\r\n// const deleteContact = id => ({\r\n//   type: actionTypes.DELETE,\r\n//   payload: { id },\r\n// });\r\n\r\n// const changeFilter = filter => ({\r\n//   type: actionTypes.CHANGE_FILTER,\r\n//   payload: { filter },\r\n// });\r\n\r\n// const showAlert = () => ({\r\n//   type: actionTypes.ALERT,\r\n// });\r\n","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/contacts/contactsActions';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name } = this.state;\r\n\r\n    if (\r\n      this.props.items.find(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n      )\r\n    ) {\r\n      this.props.onChangeAlert();\r\n      setTimeout(() => this.props.onChangeAlert(), 1500);\r\n      return;\r\n    }\r\n\r\n    this.props.onAddContact(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.contactForm}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.contacts.items,\r\n    alert: state.contacts.alert,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAddContact: contact => dispatch(actions.addContact(contact)),\r\n  onChangeAlert: () => dispatch(actions.showAlert()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport styles from \"./ContactsListItems.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/contacts/contactsActions\";\r\n\r\nfunction ContactsListItems({ contact, onDeleteContact }) {\r\n  const deleteItem = () => {\r\n    onDeleteContact(contact.id);\r\n  };\r\n\r\n  return (\r\n    <li className={styles.ContactsListItem}>\r\n      {contact.name}: {contact.number}\r\n      <button type=\"button\" onClick={deleteItem}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(actions.deleteContact(id))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ContactsListItems);\r\n","import React, { Component } from 'react';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport styles from './ContactsList.module.css';\r\nimport ContactsListItems from '../contactsListItem/ContactsListItems';\r\nimport actions from '../../redux/contacts/contactsActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ContactsList extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <TransitionGroup component=\"ul\" className={styles.contactsList}>\r\n          {this.props.contacts.map(contact => (\r\n            <CSSTransition\r\n              key={contact.id}\r\n              in={this.props.contacts.length > 0}\r\n              timeout={250}\r\n              classNames={styles}\r\n            >\r\n              <ContactsListItems contact={contact} />\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst getVisibleTasks = (contacts, filter) => {\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: getVisibleTasks(state.contacts.items, state.contacts.filter),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onContactDelete: id => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     contacts: state.contacts.filter\r\n//       ? state.contacts.items.filter(contact =>\r\n//           contact.name\r\n//             .toLowerCase()\r\n//             .includes(state.contacts.filter.toLowerCase()),\r\n//         )\r\n//       : state.contacts.items,\r\n//   };\r\n// };\r\n\r\n// export default connect(mapStateToProps)(ContactsList);\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/contacts/contactsActions\";\r\n\r\nconst Filter = ({ filter, getFilter }) => {\r\n  return (\r\n    <div className={styles.filterWrapper}>\r\n      <CSSTransition in={true} timeout={1000} classNames={styles}>\r\n        <label className={styles.filter}>\r\n          Find contacts by name\r\n          <input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={e => {\r\n              getFilter(e.target.value);\r\n            }}\r\n          />\r\n        </label>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: state.contacts.filter\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getFilter: filter => dispatch(actions.changeFilter(filter))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Filter);\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./Alert.module.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Alert({ alert }) {\r\n  return (\r\n    <CSSTransition in={alert} classNames={styles} timeout={250} unmountOnExit>\r\n      <p className={styles.alert}>The name is already exist</p>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    alert: state.contacts.alert\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React from \"react\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactsList from \"./contactsList/ContactsList\";\r\nimport Filter from \"./filter/Filter\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./App.module.css\";\r\nimport Alert from \"./Alert/Alert\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../redux/contacts/contactsActions\";\r\n\r\nfunction App({ items, alert }) {\r\n  return (\r\n    <>\r\n      <Alert alert={alert} />\r\n      <CSSTransition in={true} timeout={500} classNames={styles} appear={true} unmountOnExit>\r\n        <p className={styles.sectionTitle}> Phonebook </p>\r\n      </CSSTransition>\r\n      <ContactForm />\r\n      {items.length > 1 && <Filter />}\r\n      <ContactsList />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.contacts.items\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangeFilter: filter => dispatch(actions.changeFilter(filter))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contactsActions';\r\n// import actionTypes from './contactsActionTypes';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, action) => [...state, action.payload],\r\n  [actions.deleteContact]: (state, action) =>\r\n    state.filter(contact => contact.id !== action.payload.id),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, action) => action.payload.filter,\r\n});\r\n\r\nconst alert = createReducer(false, {\r\n  [actions.showAlert]: (state, _) => !state,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  alert,\r\n});\r\n\r\n// const items = (state = [], action) => {\r\n//   switch (action.type) {\r\n//     case actionTypes.ADD:\r\n//       return [...state, action.payload];\r\n\r\n//     case actionTypes.DELETE:\r\n//       return state.filter(contact => contact.id !== action.payload.id);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', action) => {\r\n//   switch (action.type) {\r\n//     case 'contacts/filter':\r\n//       return action.payload.filter;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const alert = (state = false, action) => {\r\n//   switch (action.type) {\r\n//     case 'contacts/alert':\r\n//       return !state;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","// import { createStore, combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst persistConfig = {\r\n  key: 'items',\r\n  storage,\r\n  blacklist: ['filter', 'alert'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n//   composeWithDevTools(),\r\n// );\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store.store}>\r\n    <PersistGate loading={null} persistor={store.persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}